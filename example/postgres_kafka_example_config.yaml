input:
  connector: "postgres" # (One of: [postgres])
  postgresConfig:
    # The user must have permission to create tables, triggers, functions and to send Notifications
    # to an channel using PG_NOTIFY(...)
    #
    # The "From To" application will create a "from_to_event" table and triggers for every
    # configured table on "input.postgresConfig.tables.*" to provide the CDC feature needed for
    # it to work.
    #
    # The "from_to_event" table itself can be configured by you to be unlogged and older entries
    # can be safely deleted at any moment
    #
    # All the DDL and DML queries performed by the "From To" application can be audited at
    # https://github.com/gustapinto/from-to/blob/main/internal/connectors/postgres/listener.go
    dsn: "postgres://from-to-user:from-to-passw@localhost:5432/from-to-db?sslmode=disable"
    pollSeconds: 30 # (Optional, default=30)
    tables:
      - "sales"

outputs:
  salesKafkaOutput:
    connector: "kafka" # (One of: [kafka])
    kafkaConfig:
      bootstrapServers:
        - "localhost:9094"
      topics:
        - name: "publicSales"
          partitions: 3 # (Optional, default=3)
          replicationFactor: 1 # (Optional, default=1)

mappers:
  salesMapper:
    type: "lua" # (One of: [lua])
    luaConfig:
      filePath: "./example/mappers.lua"
      function: "map_sales_event_with_http"

channels:
  salesChannel:
    from: "sales"
    to: "publicSales"
    output: "salesKafkaOutput"
    mapper: "salesMapper" # (Optional)
